[{"/home/ramon/Dev/etiquetamaker/src/index.js":"1","/home/ramon/Dev/etiquetamaker/src/reportWebVitals.js":"2","/home/ramon/Dev/etiquetamaker/src/App.js":"3","/home/ramon/Dev/etiquetamaker/src/Menu.js":"4","/home/ramon/Dev/etiquetamaker/src/Etiqueta.js":"5","/home/ramon/Dev/etiquetamaker/src/Remitente.js":"6","/home/ramon/Dev/etiquetamaker/src/Destinatario.js":"7"},{"size":478,"mtime":1611313860812,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611313860812,"results":"10","hashOfConfig":"9"},{"size":2582,"mtime":1611749659833,"results":"11","hashOfConfig":"9"},{"size":878,"mtime":1611749354036,"results":"12","hashOfConfig":"9"},{"size":496,"mtime":1611749354036,"results":"13","hashOfConfig":"9"},{"size":334,"mtime":1611749354036,"results":"14","hashOfConfig":"9"},{"size":1352,"mtime":1611749354036,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pzzmsh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/ramon/Dev/etiquetamaker/src/index.js",[],["33","34"],"/home/ramon/Dev/etiquetamaker/src/reportWebVitals.js",[],"/home/ramon/Dev/etiquetamaker/src/App.js",["35","36"],"import './App.css';\nimport {useState, useEffect} from 'react'\nimport Etiqueta from './Etiqueta.js'\nimport Menu from './Menu.js'\n\nfunction App() {\n\n  const [orders, setOrders] =useState([{id:1, line_items:[{}], billing_address:{zip:\"\", province:\"\", country:\"\", city:\"\"}}])\n  const [showOrders, setShowOrders] =useState([{id:1, line_items:[{}], billing_address:{zip:\"\", province:\"\", country:\"\", city:\"\"}}])\n  const [orderIDs, setOrderIDs] = useState([{id:0, qty: 0},{id:0, qty: 0},{id:0, qty: 0},{id:0, qty: 0},{id:0, qty: 0},{id:0, qty: 0},{id:0, qty: 0},{id:0, qty: 0}])\n  \n  const [startAt, setStartAt] = useState(0)\n\n  const emptyOrder = {\n    line_items:[{quantity:0}],\n    billing_address:{\n      address1:\"\",\n      address2:\"\",\n      city:\"\",\n      province:\"\",\n      country:\"\",\n      zip:\"\",\n      first_name:\"\",\n      last_name:\"\"\n    }\n  }\n\n  const fulfillOrders= async ()=>{\n    await fetch(`http://localhost:8081/fullfillorder`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ids: orderIDs\n      })\n    }).then(res=>res.json()).then(res=> console.log(res))\n  }\n\n\n  const getJSON = async function(){\n    console.log(\"getting JSON\")\n    await fetch(`http://localhost:8081/`).then(res=>res.json()).then(shopify=>{\n\n      const newOrders = shopify.orders\n\n      if(newOrders.length){\n        if(orders[0].id!==newOrders[0].id || newOrders[0].id===0){\n          setOrderIDs(newOrders.map(order=>({id: order.id, qty: order.line_items[0].quantity})))\n          setOrders(newOrders)\n        }\n        else{\n          alert(\"no changes on the orders yet\")\n        }\n      }\n      else{\n        alert(\"no more orders\")\n      }\n    }).then(()=>arrangeShowOrders())\n  }\n\n  const arrangeShowOrders= ()=>{\n    const newOrders = [...orders]\n\n    for(let j=0; j<startAt; j++){\n      newOrders.unshift(emptyOrder)\n    }\n\n    const newOrdersLenght = newOrders.length\n\n    if(newOrdersLenght<8){\n      for(let i=0; i<8-newOrdersLenght; i++){\n        newOrders.push(emptyOrder)\n      }\n    }\n    setShowOrders(newOrders)\n  }\n\n\n  useEffect(() => {\n    getJSON()\n  }, [])\n\n  useEffect(() => {\n    arrangeShowOrders()\n  }, [startAt, orders])\n\n  return (\n    <div className=\"fullapp\">\n      <div id=\"printcontent\">\n        <div className=\"dina4\">\n          {showOrders.map(element=>(\n            <Etiqueta order={element} />\n          ))}\n        </div>\n      </div>\n      <Menu fulfillOrders={fulfillOrders} getJSON={getJSON} setStartAt={setStartAt} startAt={startAt}/>\n    </div>\n\n  );\n}\n\nexport default App;\n","/home/ramon/Dev/etiquetamaker/src/Menu.js",[],"/home/ramon/Dev/etiquetamaker/src/Etiqueta.js",[],"/home/ramon/Dev/etiquetamaker/src/Remitente.js",[],"/home/ramon/Dev/etiquetamaker/src/Destinatario.js",[],["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":82,"column":6,"nodeType":"45","endLine":82,"endColumn":8,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":86,"column":6,"nodeType":"45","endLine":86,"endColumn":23,"suggestions":"48"},{"ruleId":"39","replacedBy":"49"},{"ruleId":"41","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJSON'. Either include it or remove the dependency array.","ArrayExpression",["53"],"React Hook useEffect has a missing dependency: 'arrangeShowOrders'. Either include it or remove the dependency array.",["54"],["51"],["52"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [getJSON]",{"range":"59","text":"60"},"Update the dependencies array to be: [startAt, orders, arrangeShowOrders]",{"range":"61","text":"62"},[2141,2143],"[getJSON]",[2195,2212],"[startAt, orders, arrangeShowOrders]"]